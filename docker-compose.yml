# docker compose build - используем эту команду, если меняли что-то в Dockerfile
# docker compose up - если изменили только docker-compose


services:
  db:
    image: postgres:16
    container_name: booking_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5433:5432


  redis:
    image: redis:7.4
    container_name: booking_redis
    ports:
      - "6379:6379"
  booking:
    image: booking_app
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env
    depends_on:
      - db
      - redis

#    command: ["/docker/app.sh"]
    command: sh -c "alembic upgrade head && gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 7777:8000

  celery:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery

    #command: ["/docker/celery.sh", "celery"]
    command: sh -c "celery --app=tasks.celery:celery worker -l INFO"
    env_file:
      - .env
    depends_on:
      - redis

  flower:
    image: booking_flower
    build:
      context: .
    container_name: booking_flower

    #command: ["docker/celery.sh", "flower"]
    command: sh -c "celery --app=tasks.celery:celery flower"
    env_file:
      - .env
    depends_on:
      - redis
    ports:
      - 5555:5555

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3001:3000

volumes:
  pgdata:
  grafanadata:
  prometheusdata:

networks:
  backend:
    driver: bridge